# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Publish tag release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # Push events to matching semver 20.15.10

jobs:
  publish_artifacts:
    needs: create_release
    name: Publish Artifacts for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: build :app:nativeDistZip
      - name: Get Release Version
        id: get_version
        run: VERSION=$(./gradlew currentVersion -q -Prelease.quiet) && echo ::set-output name=VERSION::$VERSION
      - name: Rename files
        shell: |
          mv app/build/nativeDist/how-native*.zip app/build/nativeDist/how-${{matrix.os}}-${{ steps.get_version.outputs.VERSION }}.zip
      - name: Upload Release Files
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: |
            app/build/distributions/how-*.zip
            app/build/nativeDist/how-${{matrix.os}}-${{ steps.get_version.outputs.VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
